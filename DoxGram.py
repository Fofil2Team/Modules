import asyncio
import random
from datetime import datetime
from telethon import events

class HikkaMod:
    strings = {"name": "HikkaCommands"}

    async def progress_bar(self, progress: int, total: int = 10) -> str:
        """–ö—Ä—É—Ç–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä"""
        bar = "‚¨õ" * progress + "‚¨ú" * (total - progress)
        return f"<code>[{bar}] {progress * 10}%</code>"

    async def cmd_commands(self, message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"""
        await utils.answer(
            message,
            "üîÆ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"
            "üëÅ <code>.DoxM</code> - –ü–æ–ª–Ω—ã–π –¥–æ–∫—Å —Ü–µ–ª–∏\n"
            "üí£ <code>.Snos</code> - –¢–æ—Ç–∞–ª—å–Ω—ã–π —Ä–µ–ø–æ—Ä—Ç-—à—Ç–æ—Ä–º\n"
            "üë• <code>.Kartel</code> - –í—ã–∑–æ–≤ –º–µ–∫—Å–∏–∫–∞–Ω—Å–∫–æ–≥–æ –∫–∞—Ä—Ç–µ–ª—è (100k MXN)\n\n"
            "‚ö†Ô∏è <i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!</i>"
        )

    async def cmd_doxm(self, message):
        """–ü–æ–ª–Ω—ã–π –¥–æ–∫—Å —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π"""
        m = await utils.answer(message, "üïµÔ∏è <b>–ù–∞—á–∏–Ω–∞—é –¥–æ–∫—Å...</b>")
        
        steps = [
            "–ê–Ω–∞–ª–∏–∑ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Å–ª–µ–¥–∞",
            "–í–∑–ª–æ–º —Å–æ—Ü—Å–µ—Ç–µ–π",
            "–ü–æ–∏—Å–∫ –≤ –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö",
            "–¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ IP",
            "–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è",
            "–°–±–æ—Ä –∫–æ–º–ø—Ä–æ–º–∞—Ç–∞"
        ]
        
        for i in range(1, 11):
            await asyncio.sleep(0.3)
            await utils.answer(
                m,
                f"üïµÔ∏è <b>–î–æ–∫—Å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ...</b>\n"
                f"{await self.progress_bar(i)}\n"
                f"<i>{steps[min(i-1, len(steps)-1)]}...</i>"
            )
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        data = {
            "IP": f"185.23.{random.randint(10,255)}.{random.randint(1,255)}",
            "–ü—Ä–æ–≤–∞–π–¥–µ—Ä": random.choice(["–†–æ—Å—Ç–µ–ª–µ–∫–æ–º", "–ú–¢–°", "–ë–∏–ª–∞–π–Ω"]),
            "–õ–æ–∫–∞—Ü–∏—è": random.choice(["–ú–æ—Å–∫–≤–∞", "–°–ü–±", "–ö–∞–∑–∞–Ω—å"]),
            "–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã": f"{random.uniform(50,60):.4f}¬∞N, {random.uniform(30,40):.4f}¬∞E",
            "–ü–æ—á—Ç–∞": f"target{random.randint(1990,2005)}@{random.choice(['mail','yandex'])}.ru",
            "–¢–µ–ª–µ—Ñ–æ–Ω": f"+7{random.randint(900,999)}{random.randint(1000000,9999999)}",
            "OS": f"Windows {random.randint(7,11)}"
        }
        
        result = "üîç <b>–î–û–°–¨–ï –°–û–ë–†–ê–ù–û:</b>\n\n" + "\n".join(
            f"<b>‚Ä¢ {k}:</b> <code>{v}</code>" for k, v in data.items()
        )
        
        await utils.answer(m, result + "\n\n‚ö†Ô∏è <i>–¢–æ–ª—å–∫–æ –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π!</i>")

    async def cmd_snos(self, message):
        """–ú–æ—â–Ω—ã–π —Ä–µ–ø–æ—Ä—Ç-—à—Ç–æ—Ä–º"""
        m = await utils.answer(message, "üí£ <b>–ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ—Ç–æ–∫–æ–ª '–°–ù–û–°'...</b>")
        
        for i in range(1, 11):
            await asyncio.sleep(0.4)
            await utils.answer(
                m,
                f"üí• <b>–°–Ω–æ—Å –∞–∫–∫–∞—É–Ω—Ç–∞...</b>\n"
                f"{await self.progress_bar(i)}\n"
                f"<i>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {i*8} —Ä–µ–ø–æ—Ä—Ç–æ–≤...</i>"
            )
        
        await utils.answer(
            m,
            "‚ò†Ô∏è <b>–¶–ï–õ–¨ –£–ù–ò–ß–¢–û–ñ–ï–ù–ê!</b>\n\n"
            "<i>‚Ä¢ 87 —Ä–µ–ø–æ—Ä—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ\n"
            "‚Ä¢ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –±–∞–Ω–∞: 99%\n"
            "‚Ä¢ –í—Ä–µ–º—è –¥–æ —É–¥–∞–ª–µ–Ω–∏—è: 12-48—á</i>"
        )

    async def cmd_kartel(self, message):
        """–í—ã–∑–æ–≤ –º–µ–∫—Å–∏–∫–∞–Ω—Å–∫–æ–≥–æ –∫–∞—Ä—Ç–µ–ª—è"""
        m = await utils.answer(message, "üë• <b>–°–≤—è–∑—ã–≤–∞—é—Å—å —Å –∫–∞—Ä—Ç–µ–ª–µ–º...</b>")
        
        members = [
            "–•—É–∞–Ω (—ç–∫—Å–ø–µ—Ä—Ç –ø–æ –ø–æ—Ö–∏—â–µ–Ω–∏—è–º)",
            "–ö–∞—Ä–ª–æ—Å (–æ—Ä—É–∂–µ–π–Ω–∏–∫)",
            "–ú–∏–≥–µ–ª—å (–≤–æ–¥–∏—Ç–µ–ª—å)",
            "–≠—Å—Ç–µ–±–∞–Ω (–≤–∑—Ä—ã–≤—á–∞—Ç–∫–∞)"
        ]
        
        for i in range(1, 11):
            await asyncio.sleep(0.5)
            await utils.answer(
                m,
                f"üíÄ <b>–§–æ—Ä–º–∏—Ä—É—é –±—Ä–∏–≥–∞–¥—É...</b>\n"
                f"{await self.progress_bar(i)}\n"
                f"<i>–ù–∞–Ω—è—Ç–æ: {members[:min(i, len(members))]}</i>"
            )
        
        await utils.answer(
            m,
            "üî´ <b>–ú–ï–ö–°–ò–ö–ê–ù–°–ö–ò–ô –ö–ê–†–¢–ï–õ–¨ –ì–û–¢–û–í!</b>\n\n"
            "<i>‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å: 100,000 MXN (~5,000 USD)\n"
            "‚Ä¢ –í—Ä–µ–º—è: 24-72 —á–∞—Å–∞\n"
            "‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞</i>\n\n"
            "<code>El que busca encuentra...</code>"
        )

async def setup(hikka):
    hikka.add_module(HikkaMod)
